@model SaleManagement.Protal.Models.SpotGoods.SpotGoodsViewModel
@{
    Title("现货");
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <ul class="breadcrumb">
        <li>
            <a href="/home/index">首页</a>
        </li>
        <li>
            <a href="/SpotGoods/list">现货管理</a>
        </li>
        <li>
            <a href="/SpotGoods/create">新增现货</a>
        </li>
    </ul>
</div>
<div class="row">
    <div class="box col-md-12">
        <div class="box-inner">
            <div class="box-header well" data-original-title="">
                <h2>新增/编辑现货</h2>
            </div>
            <div class="box-content">
                @using (Html.BeginForm("Create", "SpotGoods", FormMethod.Post, new { id = "SpotGoodsForm" }))
                {
                    <input type="hidden" name="attachmentIds" id="attachmentIds" />
                    <input type="hidden" name="SetStoneInfos" id="SetStoneInfos" />
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Id)
                    <div class="form-horizontal ptop5">
                        <div class="form-group">
                            <label class="control-label col-md-2 col-xs-4"><span class="text-danger">*</span>现货名称：</label>
                            <div class="col-md-4 col-xs-8">
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "请输入现货名称", autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2"><span class="text-danger">*</span>成色：</label>
                            <div class="col-md-10 col-xs-8">
                                <span class="btn btn-default btn-sm" name="btnSpan" data-value="5">18K白</span>
                                <span class="btn btn-default btn-sm" name="btnSpan" data-value="4">18K红</span>
                                <span class="btn btn-default btn-sm" name="btnSpan" data-value="3">18K黄</span>
                                @Html.HiddenFor(model => model.ColorFormId)
                                @Html.ValidationMessageFor(model => model.ColorFormId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2"><span class="text-danger">*</span>主石：</label>
                            <div class="col-md-10 col-xs-8">
                                @foreach (var mainStoneType in SaleManagement.Core.SaleManagentConstants.UI.MainStoneTypes)
                                {
                                    <span class="btn btn-default btn-sm" name="btnSpan" data-value="@mainStoneType">@mainStoneType</span>
                                }
                                @Html.HiddenFor(model => model.MainStone)
                                @Html.ValidationMessageFor(model => model.MainStone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2"><span class="text-danger">*</span>手寸：</label>
                            <div class="col-md-10 col-xs-8" id="divColorFormId">
                                @foreach (var handSize in SaleManagement.Core.SaleManagentConstants.UI.HandSizes)
                                {
                                    <span class="btn btn-default btn-sm" name="btnSpan" data-value="@handSize">@handSize</span>
                                }
                                @Html.HiddenFor(model => model.HandSize)
                                @Html.ValidationMessageFor(model => model.HandSize, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2 col-xs-4"><span class="text-danger">*</span>总重：</label>
                            <div class="col-md-2 col-xs-8">
                                @Html.TextBoxFor(model => model.Weight, new { @class = "form-control", placeholder = "请输入总重", autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2 col-xs-4"><span class="text-danger">*</span>净金重：</label>
                            <div class="col-md-2 col-xs-8">
                                @Html.TextBoxFor(model => model.GoldWeight, new { @class = "form-control", placeholder = "请输入净金重", autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.GoldWeight, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2 col-xs-4"><span class="text-danger">*</span>镶嵌费用：</label>
                            <div class="col-md-2 col-xs-8">
                                @Html.TextBoxFor(model => model.MosaicCost, new { @class = "form-control", placeholder = "请输入镶嵌费用", autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.MosaicCost, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2 col-xs-4"><span class="text-danger">*</span>总额：</label>
                            <div class="col-md-2 col-xs-8">
                                @Html.TextBoxFor(model => model.Price, new { @class = "form-control", placeholder = "请输入总额", autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="attachment">
                                    <ul data-bind="foreach:files" class="thumbnails gallery">
                                        <li class="thumbnail">
                                            <a class="cboxElement" href="javascript:void(0)"><img data-bind="text:name,attr:{src:url}" style="display: block;"></a>
                                            <div class="well gallery-controls">
                                                <a data-bind="click:$parent.deleteFile" href="javascript:void(0)" class="gallery-delete btn"><i class="glyphicon glyphicon-remove"></i></a>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <div class="col-md-2"></div>
                            <div class="col-md-10">
                                <a class="upload-btn btn btn-danger" href="javascript:void(0);" role="button" data-toggle="popover" data-container="body" data-placement="bottom" data-original-title="" title="">
                                    提交款式图片
                                    <input type="file" name="file" multiple>
                                </a>
                                <span style="color:red">最多可上传2个，每个不超过4M</span>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="box-content">
                                <div class="center"><button type="button" data-bind="click:addSetStone" class="btn btn-primary">新增副石</button></div>
                                <table class="table table-striped table-bordered bootstrap-datatable  responsive">
                                    <thead>
                                        <tr>
                                            <th>副石品类</th>
                                            <th>数目</th>
                                            <th>石重（ct）</th> 
                                        </tr>
                                    </thead>
                                    <tbody data-bind="foreach:setStonInfos">
                                        <tr>
                                            <td data-bind="text:mathchStoneName"></td>
                                            <td data-bind="text:number"></td>
                                            <td data-bind="text:weight"></td>

                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            </div>

                        <div class="form-group text-center">
                            <button type="submit" id="saveSpotGoods"  class="btn btn-primary text-center">保存</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <!--/span-->
</div><!--/row-->

<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

        </div>
    </div>
</div>
@{
    var jsonItems = Model.Attachments.Select(item => string.Format("{{name:\"{0}\",length:\"{1}\",id:\"{2}\",url:\"{3}\"}}",
        item.Name, item.Length, item.Id, item.Url)).ToList();

    //var stoneJsonItems = Model.SetStoneInfos.Select(item => string.Format("{{matchStoneName:\"{0}\",number:\"{1}\",weight:\"{2}\",id:\"{3}\"}}",
    //    item.MathchStoneName, item.Number, item.Number, item.MatchStoneId)).ToList();
}
<script type="text/javascript">
    var filesData = [@Html.Raw(string.Join(",", jsonItems))];
    var stoneData = [];
</script>
@section scripts{
    @Scripts.Render("~/bundles/js/knockout")
    @Scripts.Render("~/bundles/js/jqueryval")
    @Scripts.Render("~/bundles/js/ajaxForm")
    @Scripts.Render("~/bundles/js/fileupload")
    @Scripts.Render("~/bundles/js/SpotGoods/create")
}